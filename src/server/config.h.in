/**
 * @file
 * Server's configuration - both precompiled and parsed from `argv`.
 */

#ifndef _CONFIG_H
#define _CONFIG_H

#include <stdint.h>

/**
 * Project name populated from CMake file.
 */
#define PROJECT_NAME			"@PROJECT_NAME@"

/**
 * Project version number populated from CMake file.
 */
#define PROJECT_VERSION			"@PROJECT_VERSION@"

/**
 * Processor architecture (eg. `x86_64`).
 */
#define HOST_SYSTEM_PROCESSOR		"@CMAKE_HOST_SYSTEM_PROCESSOR@"

/**
 * Short version of the license.
 */
#define	COPYRIGHT			"Copyright (C) 2016 @AUTHOR@."\
					"\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."\
					"\nThis is free software: you are free to change and redistribute it."\
					"\nThere is NO WARRANTY, to the extent permitted by law.\n"

/**
 * Author of the project.
 */
#define AUTHOR				"@AUTHOR@"

/**
 * If `CMAKE_BUILD_TYPE=Debug`, then `DEBUG` is defined. Useful for eg. defining
 * function printing debug messages.
 */
#cmakedefine DEBUG

/**
 * Application configuration - both precompiled and parsed from `argv`.
 */
typedef struct config_t {
	/**
	 * Selected runtime options are represented by single bits set to 1.
	 */
	uint32_t selected_options;
	/**
	 * Value of the testing `--test` option.
	 */
	int test_val;
} config_t;

/**
 * Precompiled  application configuration ie. configuration before parsing `argv`.
 */
static const config_t INIT_CONFIG = {
	.selected_options = 0,
	.test_val = 0
};

#endif
